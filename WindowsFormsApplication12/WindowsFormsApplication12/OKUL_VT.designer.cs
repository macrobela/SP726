#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WindowsFormsApplication12
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="OKUL_VT")]
	public partial class OKUL_VTDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertnotlarr(notlarr instance);
    partial void Updatenotlarr(notlarr instance);
    partial void Deletenotlarr(notlarr instance);
    partial void InsertOgrenciler(Ogrenciler instance);
    partial void UpdateOgrenciler(Ogrenciler instance);
    partial void DeleteOgrenciler(Ogrenciler instance);
    partial void InsertOgretmenler(Ogretmenler instance);
    partial void UpdateOgretmenler(Ogretmenler instance);
    partial void DeleteOgretmenler(Ogretmenler instance);
    #endregion
		
		public OKUL_VTDataContext() : 
				base(global::WindowsFormsApplication12.Properties.Settings.Default.OKUL_VTConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public OKUL_VTDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OKUL_VTDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OKUL_VTDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OKUL_VTDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<notlarr> notlarrs
		{
			get
			{
				return this.GetTable<notlarr>();
			}
		}
		
		public System.Data.Linq.Table<Ogrenciler> Ogrencilers
		{
			get
			{
				return this.GetTable<Ogrenciler>();
			}
		}
		
		public System.Data.Linq.Table<Ogretmenler> Ogretmenlers
		{
			get
			{
				return this.GetTable<Ogretmenler>();
			}
		}
		
		public System.Data.Linq.Table<Table_1> Table_1s
		{
			get
			{
				return this.GetTable<Table_1>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.notlarr")]
	public partial class notlarr : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _NotID;
		
		private short _Not1;
		
		private short _Not2;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNotIDChanging(short value);
    partial void OnNotIDChanged();
    partial void OnNot1Changing(short value);
    partial void OnNot1Changed();
    partial void OnNot2Changing(short value);
    partial void OnNot2Changed();
    #endregion
		
		public notlarr()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotID", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public short NotID
		{
			get
			{
				return this._NotID;
			}
			set
			{
				if ((this._NotID != value))
				{
					this.OnNotIDChanging(value);
					this.SendPropertyChanging();
					this._NotID = value;
					this.SendPropertyChanged("NotID");
					this.OnNotIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Not1", DbType="SmallInt NOT NULL")]
		public short Not1
		{
			get
			{
				return this._Not1;
			}
			set
			{
				if ((this._Not1 != value))
				{
					this.OnNot1Changing(value);
					this.SendPropertyChanging();
					this._Not1 = value;
					this.SendPropertyChanged("Not1");
					this.OnNot1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Not2", DbType="SmallInt NOT NULL")]
		public short Not2
		{
			get
			{
				return this._Not2;
			}
			set
			{
				if ((this._Not2 != value))
				{
					this.OnNot2Changing(value);
					this.SendPropertyChanging();
					this._Not2 = value;
					this.SendPropertyChanged("Not2");
					this.OnNot2Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ogrenciler")]
	public partial class Ogrenciler : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _OgrenciID;
		
		private string _OgrenciAdi;
		
		private int _Mezun;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOgrenciIDChanging(short value);
    partial void OnOgrenciIDChanged();
    partial void OnOgrenciAdiChanging(string value);
    partial void OnOgrenciAdiChanged();
    partial void OnMezunChanging(int value);
    partial void OnMezunChanged();
    #endregion
		
		public Ogrenciler()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OgrenciID", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public short OgrenciID
		{
			get
			{
				return this._OgrenciID;
			}
			set
			{
				if ((this._OgrenciID != value))
				{
					this.OnOgrenciIDChanging(value);
					this.SendPropertyChanging();
					this._OgrenciID = value;
					this.SendPropertyChanged("OgrenciID");
					this.OnOgrenciIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OgrenciAdi", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string OgrenciAdi
		{
			get
			{
				return this._OgrenciAdi;
			}
			set
			{
				if ((this._OgrenciAdi != value))
				{
					this.OnOgrenciAdiChanging(value);
					this.SendPropertyChanging();
					this._OgrenciAdi = value;
					this.SendPropertyChanged("OgrenciAdi");
					this.OnOgrenciAdiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mezun", DbType="Int NOT NULL")]
		public int Mezun
		{
			get
			{
				return this._Mezun;
			}
			set
			{
				if ((this._Mezun != value))
				{
					this.OnMezunChanging(value);
					this.SendPropertyChanging();
					this._Mezun = value;
					this.SendPropertyChanged("Mezun");
					this.OnMezunChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ogretmenler")]
	public partial class Ogretmenler : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _OgretmenID;
		
		private string _OgretmenAdi;
		
		private int _AktifCalisan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOgretmenIDChanging(short value);
    partial void OnOgretmenIDChanged();
    partial void OnOgretmenAdiChanging(string value);
    partial void OnOgretmenAdiChanged();
    partial void OnAktifCalisanChanging(int value);
    partial void OnAktifCalisanChanged();
    #endregion
		
		public Ogretmenler()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OgretmenID", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public short OgretmenID
		{
			get
			{
				return this._OgretmenID;
			}
			set
			{
				if ((this._OgretmenID != value))
				{
					this.OnOgretmenIDChanging(value);
					this.SendPropertyChanging();
					this._OgretmenID = value;
					this.SendPropertyChanged("OgretmenID");
					this.OnOgretmenIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OgretmenAdi", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string OgretmenAdi
		{
			get
			{
				return this._OgretmenAdi;
			}
			set
			{
				if ((this._OgretmenAdi != value))
				{
					this.OnOgretmenAdiChanging(value);
					this.SendPropertyChanging();
					this._OgretmenAdi = value;
					this.SendPropertyChanged("OgretmenAdi");
					this.OnOgretmenAdiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AktifCalisan", DbType="Int NOT NULL")]
		public int AktifCalisan
		{
			get
			{
				return this._AktifCalisan;
			}
			set
			{
				if ((this._AktifCalisan != value))
				{
					this.OnAktifCalisanChanging(value);
					this.SendPropertyChanging();
					this._AktifCalisan = value;
					this.SendPropertyChanged("AktifCalisan");
					this.OnAktifCalisanChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Table_1")]
	public partial class Table_1
	{
		
		private int _OgretmenID;
		
		private string _OgretmenAdi;
		
		private int _AktifCalisan;
		
		public Table_1()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OgretmenID", DbType="Int NOT NULL")]
		public int OgretmenID
		{
			get
			{
				return this._OgretmenID;
			}
			set
			{
				if ((this._OgretmenID != value))
				{
					this._OgretmenID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OgretmenAdi", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string OgretmenAdi
		{
			get
			{
				return this._OgretmenAdi;
			}
			set
			{
				if ((this._OgretmenAdi != value))
				{
					this._OgretmenAdi = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AktifCalisan", DbType="Int NOT NULL")]
		public int AktifCalisan
		{
			get
			{
				return this._AktifCalisan;
			}
			set
			{
				if ((this._AktifCalisan != value))
				{
					this._AktifCalisan = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
